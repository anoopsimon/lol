{"version":3,"sources":["App.js","index.js"],"names":["App","props","mobileView","componentDidMount","a","joke","setState","loading","fetch","response","json","data","setup","delivery","console","log","output","state","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,WAAY,WACV,OAAQ,cAAC,aAAD,UACN,sEATe,EA2BnBC,kBA3BmB,sBA2BC,gCAAAC,EAAA,6DACdC,EAAO,GAGT,sEAJgB,SAMhB,EAAKC,SAAS,CACZC,SAAS,IAPK,SASOC,MALvB,uEAJgB,cASVC,EATU,gBAUGA,EAASC,OAVZ,OAUVC,EAVU,OAadN,EAFEM,EAAKC,MAEH,UAAMD,EAAKC,MAAX,gBAAwBD,EAAKE,UAG1BF,EAAKN,KAhBE,kDAmBhBS,QAAQC,IAAI,eAAZ,MAnBgB,yBAqBhB,EAAKT,SAAS,CACZU,OAAQX,EACRE,SAAS,IAvBK,6EAzBlB,EAAKU,MAAQ,CACXD,OAAQ,GACRT,SAAS,GAJM,E,0CAYnB,WACE,OACE,gCACE,4BAAIW,KAAKD,MAAMD,SACf,cAAC,cAAD,UACE,sEAEF,cAAC,aAAD,UACE,qEAEDE,KAAKhB,kB,GAvBmBiB,aCLjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.679417c9.chunk.js","sourcesContent":["import \"./App.css\";\nimport {\n  BrowserView,\n  MobileView,\n  // isBrowser,\n  // isMobile,\n} from \"react-device-detect\";\nimport React, { Component } from \"react\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n      loading: true,\n    };\n  }\n  mobileView= () =>{\n    return (<MobileView>\n      <h1> This is rendered only on mobile </h1>\n    </MobileView>)\n  }\n  render() {\n    return (\n      <div>\n        <p>{this.state.output}</p>\n        <BrowserView>\n          <h1> This is rendered only in browser </h1>\n        </BrowserView>\n        <MobileView>\n          <h1> This is rendered only on mobile </h1>\n        </MobileView>\n        {this.mobileView}\n      </div>\n    );\n  }\n\n  componentDidMount = async () => {\n    let joke = \"\";\n\n    const apiUrl =\n      \"https://sv443.net/jokeapi/v2/joke/Programming?blacklistFlags=racist\";\n    try {\n      this.setState({\n        loading: true,\n      });\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      if (data.setup) {\n        // for 2 part joke\n        joke = `${data.setup} ... ${data.delivery}`;\n      } else {\n        // for single line joke\n        joke = data.joke;\n      }\n    } catch (error) {\n      console.log(\"error thrown\", error);\n    } finally {\n      this.setState({\n        output: joke,\n        loading: false,\n      });\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}