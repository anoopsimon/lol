{"version":3,"sources":["App.js","index.js"],"names":["App","props","renderContent","message","state","output","isMobile","isBrowser","componentDidMount","a","joke","setState","loading","fetch","response","json","data","setup","delivery","console","log","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAQqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,cAAgB,WACd,IAAIC,EAAW,mCAAM,EAAKC,MAAMC,OAAjB,OACf,OAAIC,WAEA,8BAEE,cAAC,aAAD,UACCH,MAIGI,YAEN,8BACE,cAAC,cAAD,UACCJ,MAKE,+DA5BQ,EAoCnBK,kBApCmB,sBAoCC,gCAAAC,EAAA,6DACdC,EAAO,GAEI,sEAHG,SAKhB,EAAKC,SAAS,CACZC,SAAS,IANK,SAQOC,MALV,uEAHG,cAQVC,EARU,gBASGA,EAASC,OATZ,OASVC,EATU,OAYdN,EAFEM,EAAKC,MAEH,UAAMD,EAAKC,MAAX,gBAAwBD,EAAKE,UAG1BF,EAAKN,KAfE,kDAkBhBS,QAAQC,IAAI,eAAZ,MAlBgB,yBAoBhB,EAAKT,SAAS,CACZN,OAAQK,EACRE,SAAS,IAtBK,6EAlClB,EAAKR,MAAQ,CACXC,OAAQ,GACRO,SAAS,GAJM,E,0CAgCnB,WACE,OAAO,8BAAMS,KAAKnB,sB,GAlCWoB,aCJjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.eabf7097.chunk.js","sourcesContent":["import {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\nimport React, { Component } from \"react\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n      loading: true,\n    };\n  }\n\n  renderContent = () => {\n    var message =  <h1> {this.state.output} </h1>;\n    if (isMobile) {\n      return (\n        <div>\n          \n          <MobileView>\n          {message}\n          </MobileView>\n        </div>\n      );\n    } else if(isBrowser){\n      return (\n        <div>\n          <BrowserView>\n          {message}\n          </BrowserView>\n        </div>\n      );\n    }else{\n     return( <h1>This device is not supported</h1>)\n    }\n  };\n\n  render() {\n    return <div>{this.renderContent()}</div>;\n  }\n\n  componentDidMount = async () => {\n    let joke = \"\";\n\n    const apiUrl = \"https://sv443.net/jokeapi/v2/joke/Programming?blacklistFlags=racist\";\n    try {\n      this.setState({\n        loading: true,\n      });\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      if (data.setup) {\n        // for 2 part joke\n        joke = `${data.setup} ... ${data.delivery}`;\n      } else {\n        // for single line joke\n        joke = data.joke;\n      }\n    } catch (error) {\n      console.log(\"error thrown\", error);\n    } finally {\n      this.setState({\n        output: joke,\n        loading: false,\n      });\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}