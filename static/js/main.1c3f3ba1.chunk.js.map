{"version":3,"sources":["App.js","index.js"],"names":["App","props","renderContent","state","output","isMobile","Container","style","Row","className","Col","xs","lg","md","Card","width","color","Body","isBrowser","componentDidMount","a","joke","setState","loading","fetch","response","json","data","setup","delivery","console","log","marginTop","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPASqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,cAAgB,WACO,EAAKC,MAAMC,OAChC,OAAIC,WAEA,8BAEE,cAAC,aAAD,UACA,cAACC,EAAA,EAAD,CAAWC,MAAO,EAAKJ,MAAMI,MAA7B,SACR,eAACC,EAAA,EAAD,CAAKC,UAAU,4BAAf,UACE,cAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,MAEX,cAACF,EAAA,EAAD,CAAKG,GAAG,OAAR,SACE,cAACC,EAAA,EAAD,CAAMP,MAAO,CAAEQ,MAAO,QAASC,MAAM,SAAUP,UAAU,YAAzD,SACA,cAACK,EAAA,EAAKG,KAAN,UACE,4BAAYR,UAAU,mBAAtB,SACC,EAAKN,MAAMC,eAOhB,cAACM,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,eAQDM,YAEN,8BACE,cAAC,cAAD,UACA,cAACZ,EAAA,EAAD,CAAWC,MAAO,EAAKJ,MAAMI,MAA7B,SACR,eAACC,EAAA,EAAD,CAAKC,UAAU,4BAAf,UACE,cAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,MAEX,cAACF,EAAA,EAAD,CAAKG,GAAG,OAAR,SACE,cAACC,EAAA,EAAD,CAAMP,MAAO,CAAEQ,MAAO,SAAWN,UAAU,YAA3C,SACA,cAACK,EAAA,EAAKG,KAAN,UACE,4BAAYR,UAAU,mBAAtB,SACC,EAAKN,MAAMC,eAOhB,cAACM,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,eASF,+DAtEQ,EAwGnBO,kBAxGmB,sBAwGC,gCAAAC,EAAA,6DACdC,EAAO,GAEI,sEAHG,SAKhB,EAAKC,SAAS,CACZC,SAAS,IANK,SAQOC,MALV,uEAHG,cAQVC,EARU,gBASGA,EAASC,OATZ,OASVC,EATU,OAYdN,EAFEM,EAAKC,MAEH,UAAMD,EAAKC,MAAX,gBAAwBD,EAAKE,UAG1BF,EAAKN,KAfE,kDAkBhBS,QAAQC,IAAI,eAAZ,MAlBgB,yBAoBhB,EAAKT,SAAS,CACZlB,OAAQiB,EACRE,SAAS,IAtBK,6EAtGlB,EAAKpB,MAAQ,CACXC,OAAQ,GACRmB,SAAS,EACThB,MACC,CACEyB,UAAU,QAPE,E,0CA0EnB,WACE,OAAO,8BACL,cAAC1B,EAAA,EAAD,CAAWC,MAAO0B,KAAK9B,MAAMI,MAA7B,SAEC0B,KAAK/B,wB,GA/EqBgC,aCLjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1c3f3ba1.chunk.js","sourcesContent":["import {\n  BrowserView,\n  MobileView,\n  isBrowser,\n  isMobile,\n} from \"react-device-detect\";\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container,Row,Col,Card } from \"react-bootstrap\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      output: \"\",\n      loading: true,\n      style:\n       {\n         marginTop:'10%'\n      }\n    };\n  }\n\n  renderContent = () => {\n    var message =  <h1> {this.state.output} </h1>;\n    if (isMobile) {\n      return (\n        <div>\n          \n          <MobileView>\n          <Container style={this.state.style}>\n  <Row className=\"justify-content-md-center\">\n    <Col xs lg=\"2\">\n    </Col>\n    <Col md=\"auto\">\n      <Card style={{ width: '20rem' ,color:'green'}} className=\"shadow-lg\">\n      <Card.Body>\n        <blockquote className=\"blockquote  mb-0\">\n        {this.state.output}\n        </blockquote>\n      \n      </Card.Body>\n      </Card>\n    \n      </Col>\n    <Col xs lg=\"2\">\n    </Col>\n  </Row>\n \n</Container> \n          </MobileView>\n        </div>\n      );\n    } else if(isBrowser){\n      return (\n        <div>\n          <BrowserView>\n          <Container style={this.state.style}>\n  <Row className=\"justify-content-md-center\">\n    <Col xs lg=\"2\">\n    </Col>\n    <Col md=\"auto\">\n      <Card style={{ width: '20rem' }} className=\"shadow-lg\">\n      <Card.Body>\n        <blockquote className=\"blockquote  mb-0\">\n        {this.state.output}\n        </blockquote>\n      \n      </Card.Body>\n      </Card>\n    \n      </Col>\n    <Col xs lg=\"2\">\n    </Col>\n  </Row>\n \n</Container> \n          </BrowserView>\n        </div>\n      );\n    }else{\n     return( <h1>This device is not supported</h1>)\n    }\n  };\n\n  render() {\n    return <div>\n      <Container style={this.state.style}>\n\n      {this.renderContent()}\n      </Container>\n    {/* <Container style={this.state.style}>\n  <Row className=\"justify-content-md-center\">\n    <Col xs lg=\"2\">\n    </Col>\n    <Col md=\"auto\">\n      <Card style={{ width: '20rem' }} className=\"shadow-lg\">\n      <Card.Body>\n        <blockquote className=\"blockquote  mb-0\">\n        {this.state.output}\n        </blockquote>\n      \n      </Card.Body>\n      </Card>\n    \n      </Col>\n    <Col xs lg=\"2\">\n    </Col>\n  </Row>\n \n</Container> */}\n    \n    </div>;\n  }\n\n  componentDidMount = async () => {\n    let joke = \"\";\n\n    const apiUrl = \"https://sv443.net/jokeapi/v2/joke/Programming?blacklistFlags=racist\";\n    try {\n      this.setState({\n        loading: true,\n      });\n      const response = await fetch(apiUrl);\n      const data = await response.json();\n      if (data.setup) {\n        // for 2 part joke\n        joke = `${data.setup} ... ${data.delivery}`;\n      } else {\n        // for single line joke\n        joke = data.joke;\n      }\n    } catch (error) {\n      console.log(\"error thrown\", error);\n    } finally {\n      this.setState({\n        output: joke,\n        loading: false,\n      });\n    }\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}